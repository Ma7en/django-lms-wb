"""
Django settings for alfateh project.

Generated by 'django-admin startproject' using Django 5.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""


from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv
load_dotenv()

#
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f!56o*hy7t$@*)hx79a%nz(w(7z^%6n!wob&yfimxw^oaqpfo@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = False


# 
ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [    
    # my installed
    "drf_yasg",
    "corsheaders",
    "rest_framework",
    'rest_framework.authtoken',

    # 
    'rest_framework_simplejwt',
    
    # 
    'djoser',
    'django_filters',
    
    #
    'django.contrib.sites',
    'django.contrib.flatpages',

    # 
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    
    # DJ REST Auth
    'dj_rest_auth',
    'dj_rest_auth.registration', 

    #  

    # Providers المطلوبة:
    'allauth.socialaccount.providers.google',
    # 'allauth.socialaccount.providers.facebook',
    
    #
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # my application
    "api.apps.ApiConfig",
    "accounts.apps.AccountsConfig",
    "cores.apps.CoresConfig",
]

MIDDLEWARE = [
    #
    "corsheaders.middleware.CorsMiddleware",
    'allauth.account.middleware.AccountMiddleware',
    # 
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'alfateh.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS':[os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'alfateh.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Africa/Cairo'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    )
}

# 
REST_AUTH = {
    # "JWT_SERIALIZER": 'socialauth.serializers.JWTSerializer',
    # "JWT_SERIALIZER": 'accounts.serializers.JWTSerializer',
    "USE_JWT": True,
    "JWT_AUTH_HTTPONLY": False,
}


# 
SITE_ID = 1

# 
# إعدادات allauth
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# لتحديد أن المستخدم الجديد سيكون طالبًا تلقائيًا
# ACCOUNT_ADAPTER = 'accounts.adapter.CustomAccountAdapter'
 
 
 

# 
# REST_AUTH_REGISTER_SERIALIZERS = {
#     'REGISTER_SERIALIZER': 'accounts.serializers.CustomRegisterGoogleSerializer',
# }


# 
STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

#
STATICFILES_DIRS = [BASE_DIR / "static"]
STATIC_ROOT = BASE_DIR / "staticfiles"

MEDIA_URL = "media/"
MEDIA_ROOT = BASE_DIR / "media"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


#
AUTH_USER_MODEL = "accounts.User"

# 
CORS_ALLOW_ALL_ORIGINS = True

# CORS settings
# CORS_ALLOWED_ORIGINS = os.getenv('CORS_ALLOWED_ORIGINS', 'http://localhost:5173,http://localhost:5174').split(',')
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:5173",
#     "http://localhost:5174",
#     "http://localhost:8000",
#     "http://127.0.0.1:8000",
#     "http://127.0.0.1:5173",
# ]
# CORS_ALLOWED_ORIGINS = ["*"]
CORS_ALLOW_CREDENTIALS = True

# 
CORS_ALLOW_METHODS = [
    'DELETE',
    'GET',
    'OPTIONS',
    'PATCH',
    'POST',
    'PUT',
]

# 
CORS_ALLOW_HEADERS = [
    'accept',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
]


# 
X_FRAME_OPTIONS = 'ALLOWALL'
XS_SHARING_ALLOWED_METHODS = ['POST','GET','OPTIONS', 'PUT', 'DELETE']



# =====================================================================================
# SMTP Google
# EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
# EMAIL_HOST = "smtp.gmail.com"
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = "m9ee9m@gmail.com"
# EMAIL_HOST_PASSWORD = "adlbfmpzzkndnfpz"
# FROM_EMAIL = "m9ee9m@gmail.com"
# DEFAULT_FROM_EMAIL = "m9ee9m@gmail.com"


# =====================================================================================
# SMTP Localhost
# http://localhost:8025
EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "localhost"
EMAIL_PORT = 1025
DEFAULT_FROM_EMAIL = "no-reply@localhost"
FROM_EMAIL = "no-reply@localhost"
EMAIL_HOST_USER = "no-reply@localhost"



# =====================================================================================
# Payment
# HYPERPAY_BASE_URL = os.environ.get('HYPERPAY_BASE_URL', 'https://eu-test.oppwa.com')
# HYPERPAY_ENTITY_ID = os.getenv("HYPERPAY_ENTITY_ID")
# HYPERPAY_TOKEN = os.getenv("HYPERPAY_TOKEN")


# =====================================================================================